x-env: &env
  POSTGRES_DB: pipeline
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password2

x-pipeline-common: &pipeline-common
  build: pipeline
  volumes:
    - ./data-intake:/opt/data-intake
  environment:
    <<: *env
    POSTGRES_HOST: database
    DATA_INTAKE: /opt/data-intake
  develop:
    watch:
      - action: sync+restart
        path: ./pipeline/src
        target: /opt/pipeline
      - action: rebuild
        path: ./pipeline/package.json

services:        
  database:
    build: database
    ports:
      - "5432:5432"
    environment:
      <<: *env
      POSTGRESQL_SHARED_PRELOAD_LIBRARIES: pgaudit,pg_partman_bgw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pipeline"]
      interval: 1s
      retries: 10
      start_period: 5s
  watcher:
    command: npm run watcher-dev
    <<: *pipeline-common
    healthcheck:
      test: ["CMD-SHELL", "exit 0"]
      interval: 1s
    depends_on:
      database:
        condition: service_healthy
        restart: true
  worker:
    command: npm run worker-dev
    <<: *pipeline-common
    deploy:
      mode: replicated
      replicas: 4
    depends_on:
      watcher:
        condition: service_healthy
        restart: true
  dbt:
    image: ghcr.io/dbt-labs/dbt-postgres:1.9.latest
    platform: linux/amd64
    profiles: ["dbt"]
    environment:
      <<: *env
      POSTGRES_HOST: database
      POSTGRES_SCHEMA: pipeline
    volumes:
      - type: bind
        source: ./dbt
        target: /usr/app/dbt
      - type: bind
        source: ./dbt/profiles.yml
        target: /root/.dbt/profiles.yml
